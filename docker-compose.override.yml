version: '3.4'

services:
  einvoice.hungary.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - EventBusConnection=host.docker.internal
      - EventBusUserName=user
      - EventBusPassword=123456
    ports:
      - "80"
      - "443"
    links:
      - sql.data
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      mynetwork:
        aliases:
          - api.einvoce.hungary
  
  sql.data:
    hostname: sql-test
    environment:
      - SA_PASSWORD=Pass@word
      - ACCEPT_EULA=Y
    ports:
      - "5434:1433"
    volumes:
      - C:/Docker/sql/data:/var/opt/mssql/data
    networks:
      mynetwork:
        aliases:
          - db.einvoce.hungary

  mongo-express:
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: user
      ME_CONFIG_BASICAUTH_PASSWORD: user
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin

  mongo:
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  rabbitmq:
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=123456 
    ports:
      - "15672:15672"  # Important: In a production environment your should remove the external port
      - "5672:5672"    # Important: In a production environment your should remove the external port
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
   mongodata:

networks:
    mynetwork:
      driver: bridge
    mongo-compose-network:
      driver: bridge